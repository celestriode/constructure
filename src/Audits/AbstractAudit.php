<?php namespace Celestriode\Constructure\Audits;

use Celestriode\Constructure\Utils\MultiSingletonTrait;
use Celestriode\Constructure\Reports\ReportsInterface;
use Celestriode\Constructure\Exceptions\AbstractReportException;
use Celestriode\Constructure\InputInterface;
use Celestriode\Constructure\AbstractExpectedStructure;

/**
 * A standard audit optionally available for all audits to extend.
 *
 * Provides access to ::instance().
 */
abstract class AbstractAudit implements AuditInterface
{
    use MultiSingletonTrait;

    /**
     * Loops through provided issues and adds them to the provided reports.
     *
     * If the input extends AbstractExpectedStructure, it will run
     * addStructureReport() instead.
     *
     * @param InputInterface $input The input to potentially add the issues directly to.
     * @param ReportsInterface $reports The reports to add issues to.
     * @param AbstractReportException ...$issues The issues to add to reports or input.
     * @return void
     */
    protected function addIssuesToReports(InputInterface $input, ReportsInterface $reports, AbstractReportException ...$issues): void
    {
        // Cycle through all the issues generated by the predicate.

        foreach ($issues as $issue) {

            // Add report message to the input itself if possible.
            
            if ($input instanceof AbstractExpectedStructure) {

                // Only if it's an AbstractExpectedStructure.

                $input->addStructureReport($issue->getReportMessage(), $reports);
            } else {

                // If not, then just add it to the reports directly.

                $reports->addReport($issue->getReportMessage());
            }
        }
    }
}
